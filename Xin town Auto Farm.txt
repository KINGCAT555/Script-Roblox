local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Xin Town Auto Farm", "DarkTheme")
local Tab = Window:NewTab("Update!!")
local Section = Tab:NewSection("[+] Auto Farm")
local Section = Tab:NewSection("[+] Auto Equip")
local Section = Tab:NewSection("[+] Auto Package")
local Section = Tab:NewSection("[+] Auto Eat")
local Section = Tab:NewSection("[+] Server Hop&Rejoin")
local Section = Tab:NewSection("[+] Config Incoming!!..")
local Tab = Window:NewTab("Auto Farm")


local args = {
    [1] = "Equip",
    [2] = "Basket"
}

game:GetService("ReplicatedStorage").Remote.RemoteEvent:FireServer(unpack(args))

local Toollist = {}
local Tool = nil

for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
  table.insert(Toollist,v.Name)
end

local Section = Tab:NewSection("Banana Farm")
Section:NewButton("Auto Farm Banana", "yay nom", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2593, 3, 2367)
    while true do wait()
game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
task.wait(10)
end
end)
Section:NewDropdown("Select tool", "", Toollist, function(currentOption)
    Tool = currentOption
end)

Section:NewToggle("Auto Equip", "ToggleInfo", function(a)
    AutoEquiped = a
end)

spawn(function()
while wait() do
if AutoEquiped then
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(tool))
end)
end
end
end)

Section:NewButton("Auto Package", "yay nom", function()
    while true do wait(3600)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2023, 3, 2309)
end
    while true do wait(3660)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2593, 3, 2367)
end
end)
local Section = Tab:NewSection("Eat Food")
Section:NewButton("Eat Water", "yay nom", function()
while true do wait(60)
    local args = {
    [1] = "Eat",
    [2] = "Water"
}

game:GetService("ReplicatedStorage").Remote.RemoteEvent:FireServer(unpack(args))
end
end)
Section:NewButton("Eat Pudding", "yay nom", function()
while true do wait(60)
    local args = {
    [1] = "Eat",
    [2] = "Pudding"
}

game:GetService("ReplicatedStorage").Remote.RemoteEvent:FireServer(unpack(args))
end
end)
local Tab = Window:NewTab("Server")
local Section = Tab:NewSection("Server Hop & Rejoin")
Section:NewButton("Server Hop", "yay nom", function()
    Time = 1 -- seconds
repeat wait() until game:IsLoaded()
wait(Time)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
   local Site;
   if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
   else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
   end
   local ID = ""
   if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
   end
   local num = 0;
   for i,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
           for _,Existing in pairs(AllIDs) do
               if num ~= 0 then
                   if ID == tostring(Existing) then
                       Possible = false
                   end
               else
                   if tonumber(actualHour) ~= tonumber(Existing) then
                       local delFile = pcall(function()
                           delfile("NotSameServers.json")
                           AllIDs = {}
                           table.insert(AllIDs, actualHour)
                       end)
                   end
               end
               num = num + 1
           end
           if Possible == true then
               table.insert(AllIDs, ID)
               wait()
               pcall(function()
                   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                   wait()
                   game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
               end)
               wait(4)
           end
       end
   end
end

function Teleport()
   while wait() do
       pcall(function()
           TPReturner()
           if foundAnything ~= "" then
               TPReturner()
           end
       end)
   end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)
Section:NewButton("Rejoin Server", "yay nonm", function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)
